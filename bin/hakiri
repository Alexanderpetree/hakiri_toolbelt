#!/usr/bin/env ruby

require 'rubygems'
require 'commander/import'
require 'hakiri'
require 'terminal-table'

separator = "+#{ '-' * 78 }+"

program :name, 'hakiri'
program :version, Hakiri::VERSION
program :description, 'Hakiri CLI'

command :up do |c|
  c.syntax = 'hakiri up [options]'
  c.summary = 'Configure your stack with a JSON file.'
  c.description = 'This command lets you load your custom stack JSON file, parses it and uploads it to your project at to www.hakiriup.com.'
  c.option '--json_file STRING', String, 'Path to your JSON file'

  c.action do |args, options|
    options.default json_file: './technologies.json'

    say "#{options.json_file}"
  end
end

command :steps do |c|
  c.syntax = 'hakiri steps [options]'
  c.summary = 'Configure your stack in the simple walkthrough.'
  c.description = 'This command launches a step by step walkthrough that will help you customize your stack.'

  c.action do |args, options|
    say 'Welcome to Hakiri Walkthrough!'
    say separator

    say 'Hakiri Walkthrough will help you configure your stack step by step and show you '
    say 'vulnerabilities at the end.'
    say separator
    say 'Step 1 of 5: Rails Server'
    say '1. Unicorn'
    say '2. Phusion Passenger'
    say '3. Thin'
    say '4. Trinidad'
    say '5. None of the above'
    server = ask('What do you use as your Rails server? (1, 2, 3, 4 or 5) ', Integer) { |q| q.in = 1..5 }
    say separator
    say 'Step 2 of 5: Secondary Server'
    say '1. Apache'
    say '2. nginx'
    say '3. Both'
    say '4. Neither'
    extra_server = ask('Do you use Apache or nginx? (1, 2, 3 or 4) ', Integer) { |q| q.in = 1..4 }
    say separator
    say 'Step 3 of 5: Database'
    say '1. MySQL'
    say '2. Postgres'
    say '3. MongoDB'
    say '4. None of the above'
    db = ask('What database do you use? (1, 2, 3 or 4) ', Integer) { |q| q.in = 1..4 }
    say separator
    redis = agree 'Step 4 of 5: do you use Redis? (yes or no) '
    say separator
    memcached = agree 'Step 5 of 5: do you use Memcached? (yes or no) '
    say separator
    say 'Fetching versions on your system...'

    stack = Hakiri::Stack.new()
    stack.build_from_input(server, extra_server, db, redis, memcached)
    stack.fetch_versions

    puts stack.technologies
    #puts Terminal::Table.new rows: stack.technologies.to_a
  end
end